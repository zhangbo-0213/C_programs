#gcc 参数意义
- gcc -o putoutName file.c( -o 指定输出文件名)   
linux下可执行文件的扩展名并不一定是.out,可以不需要扩展名        
gcc -o putoutName.exe file.c      
生成的.exe同样可以在linux下执行 　　

- C语言编译过程　　　　　    
１. 预编译　　　      
*gcc -E -o a.i a.c*          
预编译a.c文件生成　a.i 预编译文件      
预编译过程中:           
a.替换 include 包含文件到.c文件中（<> 在系统目录中引入头文件，一般为系统库函数头文件，“”在当前目录下引入头文件，一般为用户自定义头文件）              
b.同时去掉.c文件中的注释                   
c.删除所有的　#define　,展开和替换所有的宏定义         
d.处理所有的条件预编译指令 ＃if #ifdef 等　　　　           
e.保留所有的 #pragma 编译器指令　　　　　　　　　　　　　
２. 编译      
*gcc -S -o a.s a.i*     
编译a.i文件生成　a.s 汇编文件　　　
编译过程将预编译生成的预编译文件进行词法分析，语法分析，语义分析及优化后生成相应的汇编代码文件    　　　　　
３. 汇编     
*gcc -c -o a.ｏ a.s*     
汇编器　a.s 汇编文件生成　a.o 机器码file 文件      
 汇编过程通过汇编器将汇编文件生成机器可执行的机器码文件,当前文件并不能执行，各个引用模块之间缺少相互衔接，需要**链接**过程后，才能正确执行       
４. 链接      
*gcc -o a.out a.o*    
链接过程生成最终可执行文件，主要解决各个引用模块之间相互引用的地址问题
